name: Release Portfolio Build

on:
  push:
    branches: [development]

jobs:
  build_api_server:
    name: Build Portfolio API Server

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Building server
        run: |
          cd ./server
          cargo build --release --all-features

      - name: Pack release
        run: |
          tar -zcvf ./portfolio-web-api.tar.gz ./target/release/portfolio/portfolio-web-api

      - uses: actions/upload-artifact@v2
        with:
          name: api_server_release
          path: ./portfolio-web-api.tar.gz

  build_ui_application:
    runs-on: ubuntu-latest
    name: Build Portfolio Application UI

    strategy:
      matrix:
        node_version: ["16.x"]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build Application UI
        run: |
          cd ./app-ui
          yarn install  
          yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: app_ui_release
          path: ./app-ui/dist

  install_api_server:
    runs-on: ubuntu-latest
    needs: [build_api_server]
    name: Install Portfolio API Server

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: api_server_release

      - name: Uploading to production server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PRODUCTION_SERVER_HOST }}
          username: ${{ secrets.PRODUCTION_SERVER_USER }}
          port: 22
          key: ${{ secrets.PRODUCTION_SERVER_PPK }}
          source: ./portfolio-web-api.tar.gz
          target: ~/tmp_release/
          overwrite: true

      - name: Unpacking and installing uploaded release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_SERVER_HOST }}
          username: ${{ secrets.PRODUCTION_SERVER_USER }}
          port: 22
          key: ${{ secrets.PRODUCTION_SERVER_PPK }}
          script: ~/start_server.sh

  install_ui_application:
    runs-on: ubuntu-latest
    needs: [build_ui_application]
    name: Install Portfolio Application UI

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v2
        with:
          name: app_ui_release
          path: dist

      - name: Packing build result
        run: |
          cd dist
          zip ../app-ui.zip ./* -r

      - name: Uploading To Production Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          port: 22
          key: ${{ secrets.PRODUCTION_PPK }}
          source: ./app-ui.zip
          target: ~/
          strip_components: 1
          overwrite: true

      - name: Unpacking and installing uploaded release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          port: 22
          key: ${{ secrets.PRODUCTION_PPK }}
          script: ~/install_release.sh

  upload_release_artifact:
    runs-on: ubuntu-latest
    needs: [build_api_server, build_ui_application]
    name: Upload Resulting Artifact

    steps:
      - uses: actions/checkout@v3

      - name: Prepearing final release artifact
        run: |
          mkdir ./artifact
          mkdir ./artifact/server
          mkdir ./artifact/app-ui

      - uses: actions/download-artifact@v2
        with:
          name: app_ui_release
          path: artifact/app-ui

      - uses: actions/download-artifact@v2
        with:
          name: api_server_release

      - name: Unpacking server release
        run: |
          tar -xzvf ./portfolio-web-api.tar.gz -C ./artifact/server

      - name: Packing final release artifact
        run: |
          cd ./artifact
          zip ../artifact.zip ./* -r

      - name: Project Information
        id: project_info
        uses: gregoranders/nodejs-project-info@v0.0.18

      - name: Creating new release
        id: create_release
        uses: gregoranders/nodejs-create-release@v0.0.18
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ steps.project_info.outputs.version }}
          name: Win95 Portfolio - ${{ steps.project_info.outputs.version }} Release
          target: ${{ github.ref }}

      - name: Upload Release Assets
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact.zip
          asset_name: artifact.zip
          asset_content_type: application/zip
