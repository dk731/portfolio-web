name: Win95 Portfolio Build

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node_version: ["16.x"]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      - name: Build Project
        run: yarn build

      - name: Packing build result in to a artifact.zip
        run: |
          cd ./dist
          zip artifact.zip ./* -r

      - name: Project Information
        id: project_info
        uses: gregoranders/nodejs-project-info@v0.0.18

      - name: Creating new release
        id: create_release
        uses: gregoranders/nodejs-create-release@v0.0.18
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ steps.project_info.outputs.version }}
          name: Win95 Portfolio - ${{ steps.project_info.outputs.version }} Release
          target: ${{ github.ref }}

      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/artifact.zip
          asset_name: artifact.zip
          asset_content_type: application/zip

      - name: Prepearing For Production Upload and Launch
        run: |
          cd ./dist
          echo "Check"
          ls -la

      - name: Uploading To Production Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          port: 22
          key: ${{ secrets.PRODUCTION_PPK }}
          source: ./dist/artifact.zip
          target: ~/
          strip_components: 2
          overwrite: true

      - name: Unpacking and installing uploaded release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          port: 22
          key: ${{ secrets.PRODUCTION_PPK }}
          script: ~/start_server.sh
